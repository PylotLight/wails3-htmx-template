package components

import "net/http"

templ Button(classes string, hxUrl string, hxTarget string, hxSwap string,method string,label string) {
	<button
 		class="btn { classes }"
 		type="submit"
 		hx-target={ hxTarget }
 		hx-trigger="click"
 		hx-swap="outerhtml transition:false"
 		if method == "get" {
			hx-get={ hxUrl }
		}
 		if method == "post" {
			hx-post={ hxUrl }
		}
	>{ label }</button>
}

templ twButton(label string) {
	<button
 		class="w-full px-4 py-6 rounded-md font-semibold backdrop-filter backdrop-blur-lg backdrop-saturate-[180%] bg-[rgba(19,_48,_97,_0.75)] rounded-[12px] border-[1px] border-[solid] border-[rgba(255,255,255,0.125)] text-gray-300 hover:bg-gray-800 hover:text-white"
 		type="button"
 		hx-get="/counter"
 		hx-target="this"
	>{ label }</button>
}

templ ButtonGlass(text string) {
	<button
 		type="button"
 		hx-get="/greet"
 		class="w-full px-4 py-4 rounded-md font-semibold text-sm bg-transparent text-gray-300 hover:bg-gray-800 hover:text-white"
	>
		{ text }
	</button>
}

templ TextInput(name string, placeholder string, method string,endpoint string,hxTrigger string) {
	<input
 		type="text"
 		name={ name }
 		placeholder={ placeholder }
 		hx-target="#result"
 		if method == "get" {
			hx-get={ endpoint }
		}
 		if method == "post" {
			hx-post={ endpoint }
		}
 		hx-trigger={ hxTrigger }
 		class={ "input join-item input-bordered input-primary w-full max-w-xs px-4 py-3 my-8" }
	/>
}

templ VersionComponent(Version string, UpdateText string) {
	<div class="stats shadow mt-auto">
		<div class="stat">
			<div class="stat-title">Current App Version</div>
			<div class="stat-value">{ Version }</div>
			<div class="stat-desc">{ UpdateText }</div>
		</div>
	</div>
}

templ VersionComponent2(title string, content string) {
	<div class="bg-gray-300 max-w-sm mx-auto rounded-md bg-clip-padding backdrop-filter backdrop-blur-lg bg-opacity-10 border border-gray-800">
		<div class="relative px-4 py-5 sm:p-6">
			<h2 class="text-lg font-semibold text-gray-900 mb-2">Card Title</h2>
			<p class="text-base text-white-800">Card content goes here.</p>
		</div>
	</div>
}

templ VersionComponent3(title string, content string) {
	<div class="relative max-w-sm mx-auto rounded-lg shadow-md overflow-hidden">
		<div class="absolute inset-0 bg-gray-600 bg-opacity-50 backdrop-filter backdrop-blur-lg"></div>
		<div class="relative px-4 py-5 sm:p-6">
			<h2 class="text-lg font-semibold text-gray-400 mb-2">{ title }</h2>
			<p class="text-base text-white-100">{ content }</p>
		</div>
	</div>
}

templ GreetForm(endpoint string) {
	<div class="result" id="result">Please enter your name below ðŸ‘‡</div>
	@TextInput("name","Enter Name","post",endpoint,"keyup changed delay:100ms")
}

func Greet(w http.ResponseWriter, r *http.Request) {
	if r.FormValue("name") != "" {
		w.Write([]byte("Hello " + r.FormValue("name") + ", It's show time!"))
		return
	}
	w.Write([]byte("Please enter your name below ðŸ‘‡"))
}

templ Pages(Pages []struct{Path string;Label string}, appVersion struct{Version string;Text string}) {
	for _, i := range Pages {
		<li hx-boost hx-get={ i.Path } hx-target="#target-form" hx-swap="innerHTML transition:true">
			<a
 				class="font-medium text-2xl"
			>{ i.Label }</a>
		</li>
	}
	@VersionComponent(appVersion.Version,appVersion.Text)
}

templ TestPage(target string, hxswap string) {
	<h1>Test page for components</h1>
	@Button("","/modal",target,hxswap,"post","Preview Modal")
}

templ Modal(title string, data string ) {
	<dialog id="modal" class="modal modal-bottom" open>
		<div class="modal-box">
			<h3 class="font-bold text-lg">{ title }</h3>
			<p class="py-4">{ data }</p>
		</div>
		<form method="dialog" class="modal-backdrop">
			<button>close</button>
		</form>
	</dialog>
}

templ Counter(count string) {
	@twButton("count is " + count)
}

templ Events() {
	// button and also some divs to show content 
	// <div hx-sse="connect:/event">
	// 	<div hx-sse="swap:eventName1">
	// 		...
	// 	</div>
	// 	<div hx-sse="swap:eventName2">
	// 		...
	// 	</div>
	// </div>
	@Button("","/event","#modal","innerHTML","get","Trigger Event")
}
